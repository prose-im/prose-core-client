[package]
name = "prose-sdk-js"
version = "0.1.110"
description = "Prose JavaScript SDK"
readme = "README.md"
license = "MPL-2.0"
edition = "2021"
homepage = "https://github.com/prose-im/prose-core-client/tree/master/bindings/prose-sdk-js"
repository = "https://github.com/prose-im/prose-core-client.git"
authors = ["Prose Foundation <dev@prose.org>"]
rust-version.workspace = true

[lib]
crate-type = ["cdylib"]

[dependencies]
anyhow = { workspace = true }
async-trait = { workspace = true }
base64 = { workspace = true }
cfg-if = "1.0"
chrono = { workspace = true }
getrandom = { version = "*", features = ["js"] }
jid = { workspace = true }
js-sys = { workspace = true }
mime = { workspace = true }
minidom = { workspace = true }
paste = "1.0"
prose-core-client = { path = "../../crates/prose-core-client" }
prose-xmpp = { path = "../../crates/prose-xmpp" }
secrecy = { workspace = true }
serde = { workspace = true, features = ["derive"] }
serde-wasm-bindgen = "0.6"
serde_json = { workspace = true }
thiserror = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true }
tracing-web = "0.1"
url = { workspace = true }
wasm-bindgen = { workspace = true }
wasm-bindgen-derive = "0.3.0"
wasm-bindgen-futures = { workspace = true }
web-sys = { version = "0.3", features = ["DomException", "Blob", "BlobPropertyBag"] }

[features]
delay-requests = ["prose-core-client/debug"]

[package.metadata.wasm-pack.profile.dev.wasm-bindgen]
# Should we enable wasm-bindgen's debug assertions in its generated JS glue?
debug-js-glue = true
# Should wasm-bindgen demangle the symbols in the "name" custom section?
demangle-name-section = true
# Should we emit the DWARF debug info custom sections?
# Works best with the DevTools plugin to support Wasm apps (https://chromewebstore.google.com/detail/pdcpmagijalfljmkmjngeonclgbbannb)
dwarf-debug-info = true

[package.metadata.wasm-pack.profile.release]
# Tell wasm-opt to:
#  * `-Oz`: optimise for size
#  * `-g`: include the "name" section (which holds the printable names for
#    symbols) in the output.
wasm-opt = ['-Oz', '-g']
