on:
  push:
    branches:
      - '**'
    paths-ignore:
      - 'bindings/prose-sdk-js/Cargo.toml'
  pull_request:
    branches:
      - '**'

name: Test and Build

jobs:
  test-native:
    runs-on: ubuntu-latest

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: wasm32-unknown-unknown
          components: rustfmt
          override: true

      - name: Install Protoc
        uses: arduino/setup-protoc@v3

      - name: Verify versions
        run: rustc --version && rustup --version && cargo --version && sqlite3 --version

      - name: Cache build context
        id: cache-cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: test-${{ runner.os }}-cargo

      - name: Check code style
        run: cargo fmt -- --check

      - name: Build crates
        run: cargo build

      - name: Build prose-sdk-ffi
        run: cargo build --package prose-sdk-ffi

      - name: Build examples
        run: cargo build --package prose-core-client-cli --package xmpp-client

      - name: Test code
        run: cargo test --features test

      - name: Run core-client integration tests
        run: cargo test --package prose-core-integration-tests

      - name: Run store integration tests
        run: cargo test --package prose-store-integration-tests

  test-wasm:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: wasm32-unknown-unknown
          components: rustfmt
          override: true

      - name: Install wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0

      - name: Verify versions
        run: rustc --version && rustup --version && cargo --version

      - name: Cache build context
        id: cache-cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: test-${{ runner.os }}-cargo

      - name: Build prose-sdk-js
        run: cargo build --package prose-sdk-js --target wasm32-unknown-unknown

      - name: Run Wasm core-client integration tests
        run: cargo xtask ci wasm

      - name: Run Wasm store integration tests
        run: cargo xtask ci wasm-store